{"version":3,"file":"static/js/959.3abc146f.chunk.js","mappings":"4MASA,MAwCA,EAxCoBA,KAChB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAC3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAAYC,QAoBxD,OAVAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAaN,EAASO,MAAKC,GAAOA,EAAIf,KACxCa,EACAV,EAAQU,EAAWb,IAVXgB,WACZ,MAAMC,QAAYC,MAAM,mDAAqDlB,EAAImB,EAAAA,GAC3EjB,QAAae,EAAIG,OACvBjB,EAAQD,EAAKmB,SACbhB,GAASiB,EAAAA,EAAAA,GAAe,CAAE,CAACtB,GAAKE,EAAKmB,UAAW,EAQ5CE,EACJ,GACD,CAACvB,IAGa,OAATE,GAAgBsB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,MAAO,SAAUC,SAAC,gBACnDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACIH,EAAAA,EAAAA,KAACM,EAAAA,EAAM,KACPF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uBAAsBJ,SAAA,EACjCC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAK3B,EAAG,QACRwB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iBAAgBJ,SAEvBzB,EAAK8B,OAAS,GAAIR,EAAAA,EAAAA,KAAA,KAAGO,UAAU,gBAAeJ,SAAC,qCAC3CzB,EAAK+B,KAAIC,IAASN,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAI,eAAiBF,EAAMlC,GAAG2B,SAAA,CAAiB,KAACH,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAACC,YAAaJ,EAAMI,YAAaJ,MAAOA,IAAS,MAAvEA,EAAMlC,aAInF,C","sources":["Comopnents/SearchMovie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport { API_TOKEN } from '../Utils/Constant'\r\nimport MovieCard from './MovieCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addSearchCache } from '../Store/SearchCacheSlice'\r\n\r\n\r\nconst SearchMovie = () => {\r\n    const { id } = useParams()\r\n    const [data, setdata] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const getcache = useSelector(store => store.SearchCache.cache)\r\n\r\n\r\n    const getdata = async () => {\r\n        const res = await fetch('https://api.themoviedb.org/3/search/movie?query=' + id, API_TOKEN)\r\n        const data = await res.json()\r\n        setdata(data.results);\r\n        dispatch(addSearchCache({ [id]: data.results }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cachedData = getcache.find(obj => obj[id]);\r\n        if (cachedData) {\r\n            setdata(cachedData[id]);\r\n        } else {\r\n            getdata();\r\n        }\r\n    }, [id])\r\n\r\n\r\n    return (data === null ? <h1 style={{ color: 'white' }}>Loading...</h1> :\r\n        <>\r\n            <Header />\r\n            <div className='searchMovieComponent'>\r\n                <h2>{id}:</h2>\r\n                <div className='getSearchMovie'>\r\n                    {\r\n                        data.length < 1 ? <p className='notFoundMovie'>I can't able to find this movie </p> :\r\n                            data.map(movie => <Link to={'/watchmovie/' + movie.id} key={movie.id} > <MovieCard poster_path={movie.poster_path} movie={movie} /> </Link>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchMovie"],"names":["SearchMovie","id","useParams","data","setdata","useState","dispatch","useDispatch","getcache","useSelector","store","SearchCache","cache","useEffect","cachedData","find","obj","async","res","fetch","API_TOKEN","json","results","addSearchCache","getdata","_jsx","style","color","children","_jsxs","_Fragment","Header","className","length","map","movie","Link","to","MovieCard","poster_path"],"sourceRoot":""}
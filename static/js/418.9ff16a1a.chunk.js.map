{"version":3,"file":"static/js/418.9ff16a1a.chunk.js","mappings":"0KAKA,MAkFA,EAlFmBA,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,OACtCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACrC,GAAEK,IAAOC,EAAAA,EAAAA,KAoCf,OANAC,EAAAA,EAAAA,YAAU,KA3BaC,WACnB,MAAMC,QAAYC,MAAM,sCAADC,OAAuCN,EAAE,0BAA0BO,EAAAA,GACpFC,QAAaJ,EAAIK,OACjBC,EAAaF,EAAKG,QAAQC,QAAOC,GAAwB,YAAfA,EAAMC,OAChDC,EAAUL,EAAWM,OAASN,EAAW,GAAKF,EAAKG,QAAQ,GACzCjB,OAAZuB,IAAZF,OAAkCE,EAAuBF,EAAQG,IAAI,EAuBrEC,GApBmBhB,WACnB,MAAMC,QAAYC,MAAM,sCAADC,OAAuCN,EAAE,mBAAmBO,EAAAA,GAC7EC,QAAaJ,EAAIK,OACvBZ,EAAcW,EAAK,EAkBnBY,EAAgB,GACjB,KAGKC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,SAEKP,IAAXxB,GAAuB8B,EAAAA,EAAAA,KAAA,KAAGE,UAAU,gBAAeH,SAAC,qCAChD7B,GAAWG,GACR2B,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAJ,UACID,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAYH,UACvBC,EAAAA,EAAAA,KAAA,UACII,MAAM,OACNC,OAAO,OACPC,IAAK,iCAAmCpC,EAAS,2BACjDqC,MAAM,uBACNC,YAAY,IACZC,MAAM,sGACNC,iBAAe,OAGvBZ,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcH,SAAA,EACzBD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAxCrBC,MACpB,MAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACtDJ,EAAiBK,MAAKC,GAAQA,EAAK1C,KAAOJ,EAAWI,OAErEoC,EAAiBO,KAAK/C,GACtBG,EAAaqC,GAEbG,aAAaK,QAAQ,YAAaP,KAAKQ,UAAUT,IACrD,EAgC+CD,GAAkBb,SAAC,YAE9CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,UAASH,SAAA,EACpBD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAAS1B,EAAWkC,UACvBT,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAa1B,EAAWkD,aAC3BzB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,mBAAiB1B,EAAWmD,gBAC9BnD,EAAWoD,UACR3B,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,oBAAgBC,EAAAA,EAAAA,KAAA,KAAG0B,KAAI,8BAAA3C,OAAgCV,EAAWoD,QAAO,oCAAoCE,OAAO,SAASC,IAAI,aAAY7B,SAAE,0BAzBjJC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAEC,MAAO,SAAU/B,SAAC,iBAgC1D,C","sources":["Comopnents/WatchMovie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { API_TOKEN } from '../Utils/Constant';\r\nimport Header from './Header'\r\n\r\nconst WatchMovie = () => {\r\n    const [getKey, setGetKey] = useState(null)\r\n    const [getDetails, setgetDetails] = useState(null)\r\n    const [watchList, setWatchList] = useState([]);\r\n    const { id } = useParams()\r\n\r\n\r\n    const getMovieTraler = async () => {\r\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${id}/videos?language=en-US`, API_TOKEN)\r\n        const data = await res.json()\r\n        const filterData = data.results.filter(video => video.type === \"Trailer\")\r\n        const trailer = filterData.length ? filterData[0] : data.results[0]\r\n        trailer === undefined ? setGetKey(undefined) : setGetKey(trailer.key);\r\n    }\r\n\r\n    const getMovieDetail = async () => {\r\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, API_TOKEN)\r\n        const data = await res.json()\r\n        setgetDetails(data);\r\n    }\r\n\r\n    const handelWatchList = () => {\r\n        const updatedWatchList = JSON.parse(localStorage.getItem('watchList')) || [];\r\n        const isDuplicate = updatedWatchList.some(item => item.id === getDetails.id);\r\n        if (!isDuplicate) {\r\n            updatedWatchList.push(getDetails);\r\n            setWatchList(updatedWatchList)\r\n\r\n            localStorage.setItem('watchList', JSON.stringify(updatedWatchList));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getMovieTraler()\r\n        getMovieDetail()\r\n    }, [])\r\n\r\n\r\n    return (<div>\r\n        <Header />\r\n\r\n        {getKey === undefined ? <p className='notFoundMovie'>I can't able to find this movie </p> :\r\n            !getKey || !getDetails ? <h1 style={{ color: 'white' }}>Loading...</h1> :\r\n                <>\r\n                    <div>\r\n                        <div className='watchMovie'>\r\n                            <iframe\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                src={'https://www.youtube.com/embed/' + getKey + '?rel=0&autoplay=1&mute=0'}\r\n                                title=\"YouTube video player\"\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                                allowFullScreen>\r\n                            </iframe>\r\n                        </div>\r\n                        <div className='movieDetails'>\r\n                            <div className='addWatchList'>\r\n                                <h3>Watch Later :- </h3>\r\n                                <button onClick={() => handelWatchList()}>Add</button>\r\n                            </div>\r\n                            <h1>Details</h1>\r\n                            <div className='details'>\r\n                                <p>Name :- {getDetails.title}</p>\r\n                                <p>Overview :- {getDetails.overview}</p>\r\n                                <p>Release Date :- {getDetails.release_date}</p>\r\n                                {getDetails.imdb_id && ( // Check if imdb_id is not null\r\n                                    <p>IMDB Details :- <a href={`https://www.imdb.com/title/${getDetails.imdb_id}/?ref_=hm_tpks_tt_i_1_pd_tp1_pbr`} target='_blank' rel=\"noreferrer\" > IMDB </a></p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n        }\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default WatchMovie"],"names":["WatchMovie","getKey","setGetKey","useState","getDetails","setgetDetails","watchList","setWatchList","id","useParams","useEffect","async","res","fetch","concat","API_TOKEN","data","json","filterData","results","filter","video","type","trailer","length","undefined","key","getMovieTraler","getMovieDetail","_jsxs","children","_jsx","Header","className","_Fragment","width","height","src","title","frameBorder","allow","allowFullScreen","onClick","handelWatchList","updatedWatchList","JSON","parse","localStorage","getItem","some","item","push","setItem","stringify","overview","release_date","imdb_id","href","target","rel","style","color"],"sourceRoot":""}